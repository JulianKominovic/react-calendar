{"version":3,"sources":["services/dateFunctions.js","utils/calendarFunctions.js","themes.js","components/landing/LandingComps.jsx","pages/Landing.jsx","pages/NotFound.jsx","components/calendar/CalendarComps.jsx","utils/calendarBuilders.js","components/calendar/DecorationComps.jsx","svgs/orangeSummer.svg","svgs/snowflake.svg","svgs/snowy-mountains.jpg","svgs/beach.svg","svgs/springBackground.svg","svgs/autumnBackground.svg","pages/Calendar.jsx","components/calendar/YearSelector.jsx","pages/SelectYear.jsx","components/addtask/AddTaskComps.jsx","services/localStorageManagment.js","pages/AddTaskBar.jsx","components/edittask/EditTaskComps.jsx","pages/EditTask.jsx","App.js","index.js"],"names":["USER_LANGUAGE","navigator","language","userLanguage","currentMoment","moment","locale","flexMoment","formattedDate","getCurrentDate","format","getDaysOfMonth","year","month","days","constructNameOfDays","forEach","e","itemDestructured","split","push","offsetDays","daysArray","i","dateToText","date","namesOfDays","indexOf","verifyOffsetDays","getMonth","m","toUpperCase","getDayOfTheWeek","y","d","setCurrentMonth","dateText","parseInt","setCurrentYear","CALENDAR_THEME","LANDING_THEME","SELECT_YEAR_THEME","EDIT_TASK_THEME","LandingBody","styled","header","LandingLogoContainer","div","Title","h1","Subtitle","h2","SocialLinks","a","HorizontalFlex","StyledReactLink","Link","Landing","className","to","href","generateCustomPosition","Math","random","Container","ErrorText","p","SuggestionText","PlanetsText","props","initY","initX","endY","endX","NotFound","CalendarContainer","CalendarHeader","animated","YearLinkRouter","Year","Month","NavMenu","CalendarGrid","CurrentDate","DaysOfWeekNames","ValidDays","OffsetDays","CurrentDay","YearSelector","YearSelectorBackButton","YearSliderSelector","YearSelectorButton","button","MonthSelectorButton","buildYearsClickables","handleYearChange","elements","name","onClick","target","map","buildMonthsClickables","handleMonthChange","finalMonth","charAt","slice","buildCalendar","daysOfMonths","numberOfMatches","actualDateArray","currentDay","currentMonth","currentYear","FinalComponent","item","index","Component","AnimationsContainer","TopElementAnimated","img","BottomImageElement","AuthorCredits","Calendar","urlParams","useParams","useState","recalculatingMonths","setRecalculatingMonths","setMonth","setYear","mobileHandlers","useSwipeable","onSwipedRight","prev","calculatePrevMonth","day","subtract","onSwipedLeft","calculateNextMonths","add","calendarAnimation","useSpring","from","transform","config","gentle","topBarCalendarAnimation","swipeTransition","useTransition","opacity","enter","delay","leave","src","summerSvgUrl","summerBottom","rel","autumnBottom","snowflakeUrl","winterBottom","springBottom","style","styles","yearReceptor","message","location","action","alert","SelectYear","AddTaskbarBody","NavBarTask","BackButton","GeneralSection","MonthAndDay","TaskBar","TextIndicatesLists","h3","EmptyTask","EmptyTaskTitle","h4","TaskButton","Task","backgroundColor","TaskTitle","localStorage","window","requestTasks","id","JSON","parse","getItem","AddTaskBar","params","color","title","keyTaskTitle","finalArray","localItem","notification","setItem","stringify","toggleNotificationFromTask","pathname","aboutProps","arrayOfObjects","filteredArray","filter","removeTaskToDatabase","TaskEditContainer","InputTitle","input","InputDesc","InputTime","InputNotification","InputColor","InputLabel","label","SubmitButton","EditTask","undefined","desc","time","bgColor","setBgColor","taskConfig","setTaskConfig","updateTask","object","destructurizeStorage","isItemDuplicated","addTaskToDatabase","newTaskData","replaceTask","type","placeholder","value","onChange","prevElements","handleTitleChange","handleDescChange","handleTimeChange","htmlFor","handleColorChange","serviceWorker","register","then","console","log","catch","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59b449f6.chunk.js","sourcesContent":["import moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nimport \"moment/locale/fr\";\r\n\r\nconst USER_LANGUAGE = navigator.language || navigator.userLanguage;\r\n// const USER_LANGUAGE = languageText;\r\n\r\nconst currentMoment = moment().locale(USER_LANGUAGE);\r\nconst flexMoment = moment().locale(USER_LANGUAGE);\r\nconst formattedDate = moment().locale(USER_LANGUAGE);\r\n\r\nconst getCurrentDate = () => {\r\n  return currentMoment.locale(USER_LANGUAGE).format(\"dddd,D,MM,YYYY\");\r\n};\r\n\r\nconst calculatePreviousMonth = (m, y) => {\r\n  const localMoment = moment().locale(USER_LANGUAGE).year(y).month(m).day(5);\r\n\r\n  const prevMonthArray = localMoment\r\n    .locale(USER_LANGUAGE)\r\n    .subtract(2, \"months\")\r\n    .format(\"M,YYYY\")\r\n    .split(\",\");\r\n\r\n  return prevMonthArray;\r\n};\r\n\r\nconst calculateNextMonth = (m, y) => {\r\n  const localMoment = moment().locale(USER_LANGUAGE).year(y).month(m);\r\n\r\n  const nextMonthArray = localMoment\r\n    .locale(USER_LANGUAGE)\r\n    .add(1, \"months\")\r\n    .subtract(1, \"months\")\r\n    .format(\"M,YYYY\")\r\n    .split(\",\");\r\n\r\n  return nextMonthArray;\r\n};\r\n\r\nconst verifyOffsetDays = (year, month, daysArray) => {\r\n  for (let i = -7; i < 7; i++) {\r\n    let dateToText = formattedDate\r\n      .locale(USER_LANGUAGE)\r\n      .year(year)\r\n      .month(month - 1)\r\n      .date(i)\r\n      .format(\"dd,D\")\r\n      .split(\",\");\r\n\r\n    let namesOfDays = dateToText[0];\r\n    let numberOfDay = dateToText[1];\r\n\r\n    if (numberOfDay === \"1\") {\r\n      return daysArray.indexOf(namesOfDays);\r\n    }\r\n  }\r\n};\r\n\r\nconst getDaysOfMonth = (year, month) => {\r\n  const days = [];\r\n  constructNameOfDays().forEach((e) => {\r\n    const itemDestructured = e.split(\"\");\r\n    days.push(itemDestructured[0] + itemDestructured[1]);\r\n  });\r\n  let offsetDays = verifyOffsetDays(year, month, days);\r\n\r\n  for (let i = 0; i < 42; i++) {\r\n    days.push(\r\n      flexMoment\r\n        .locale(USER_LANGUAGE)\r\n        .year(year)\r\n        .month(month - 1)\r\n        .date(i + 1 - offsetDays)\r\n        .format(\"D\")\r\n    );\r\n  }\r\n\r\n  return days;\r\n};\r\n\r\n//this returns the name of the days in the correct languages\r\nconst constructNameOfDays = () => {\r\n  const namesOfDays = [];\r\n  for (let i = 0; i < 7; i++) {\r\n    namesOfDays.push(\r\n      flexMoment\r\n        .locale(USER_LANGUAGE)\r\n        .year(2021) //this year month and dates match with the following order:\r\n        //monday -tuesday, wednesday, ..., sunday\r\n        .month(2)\r\n        .date(i + 1)\r\n        .format(\"ddd\")\r\n    );\r\n  }\r\n  return namesOfDays;\r\n};\r\n\r\nconst getMonth = (m) => {\r\n  const monthMoment = moment()\r\n    .locale(USER_LANGUAGE)\r\n    .month(m - 1)\r\n    .format(\"MMMM\")\r\n    .toUpperCase();\r\n\r\n  return monthMoment;\r\n};\r\n\r\nconst getDayOfTheWeek = (y, m, d) => {\r\n  const monthMoment = moment()\r\n    .locale(USER_LANGUAGE)\r\n    .year(y)\r\n    .month(m - 1)\r\n    .date(d)\r\n    .format(\"dddd\")\r\n    .toUpperCase();\r\n\r\n  return monthMoment;\r\n};\r\n\r\nexport {\r\n  getCurrentDate,\r\n  getDaysOfMonth,\r\n  getMonth,\r\n  calculatePreviousMonth,\r\n  calculateNextMonth,\r\n  getDayOfTheWeek,\r\n  USER_LANGUAGE,\r\n};\r\n","import { getCurrentDate } from \"../services/dateFunctions\";\r\n\r\nconst setCurrentMonth = () => {\r\n  const dateText = getCurrentDate().split(\",\");\r\n  const actualDay = parseInt(dateText[2]);\r\n\r\n  return actualDay;\r\n};\r\n\r\nconst setCurrentYear = () => {\r\n  const dateText = getCurrentDate().split(\",\");\r\n  const actualMonth = parseInt(dateText[3]);\r\n  return actualMonth;\r\n};\r\n\r\nexport { setCurrentMonth, setCurrentYear };\r\n","const THEMES = [\r\n  {\r\n    bg: \"#907FA4\",\r\n    fc: \"#FFF5EB\",\r\n  },\r\n];\r\n\r\nconst CALENDAR_THEME = {\r\n  bg: \"#F5BE9B\",\r\n  fc: \"#5D534A\",\r\n  \"btn-clr\": \"#A58FAA\",\r\n};\r\n\r\nconst LANDING_THEME = {\r\n  bg: \"#FFF5DA\",\r\n  fc: \"#5D534A\",\r\n  \"btn-clr\": \"#A58FAA\",\r\n};\r\n\r\nconst SELECT_YEAR_THEME = {\r\n  bg: \"#DE8971\",\r\n  fc: \"#FFF5EB\",\r\n  bgHover: \"#907FA4aa\",\r\n};\r\n\r\nconst EDIT_TASK_THEME = {\r\n  bg: \"#907FA4\",\r\n  fc: \"#FFF5EB\",\r\n  placeHolderColor: \"#FFF5EB33\",\r\n  bgHover: \"#907FA4aa\",\r\n  cardBackgroundColor: \"#FFFFFF11\",\r\n};\r\n\r\nexport {\r\n  THEMES,\r\n  LANDING_THEME,\r\n  CALENDAR_THEME,\r\n  SELECT_YEAR_THEME,\r\n  EDIT_TASK_THEME,\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { LANDING_THEME } from \"../../themes\";\r\n\r\nconst LandingBody = styled.header`\r\n  font-family: \"Roboto\", sans-serif;\r\n  color: ${LANDING_THEME.fc};\r\n\r\n  background-color: ${LANDING_THEME.bg};\r\n\r\n  width: 100vw;\r\n\r\n  height: 100vh;\r\n\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst LandingLogoContainer = styled.div`\r\n  font-size: clamp(10px, 30vw, 160px);\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: clamp(10px, 10vw, 100px);\r\n  font-weight: 800;\r\n  margin: 0;\r\n`;\r\n\r\nconst Subtitle = styled.h2`\r\n  font-size: clamp(10px, 3.6vw, 100px);\r\n  font-weight: 300;\r\n  margin-top: -10vh;\r\n`;\r\n\r\nconst SocialLinks = styled.a`\r\n  font-size: clamp(10px, 14vw, 100px);\r\n  color: ${LANDING_THEME.fc};\r\n`;\r\n\r\nconst HorizontalFlex = styled.div`\r\n  display: flex;\r\n  gap: 3em;\r\n`;\r\nconst StyledReactLink = styled(Link)`\r\n  background-color: ${LANDING_THEME[\"btn-clr\"]};\r\n  padding: 1em 3em;\r\n  font-size: clamp(10px, 5vw, 100px);\r\n  border-radius: 1.3em;\r\n  text-decoration: none;\r\n  color: #fff5eb;\r\n`;\r\n\r\nexport {\r\n  LandingBody,\r\n  LandingLogoContainer,\r\n  Title,\r\n  Subtitle,\r\n  SocialLinks,\r\n  HorizontalFlex,\r\n  StyledReactLink,\r\n};\r\n","import React from \"react\";\r\nimport { setCurrentYear, setCurrentMonth } from \"../utils/calendarFunctions\";\r\n\r\nimport {\r\n  LandingBody,\r\n  LandingLogoContainer,\r\n  Title,\r\n  Subtitle,\r\n  SocialLinks,\r\n  HorizontalFlex,\r\n  StyledReactLink,\r\n} from \"../components/landing/LandingComps\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <LandingBody>\r\n      <LandingLogoContainer>\r\n        <i className=\"fas fa-calendar\"></i>\r\n      </LandingLogoContainer>\r\n      <Title>Simple Calendar</Title>\r\n      <Subtitle>Just a lightweight pocket calendar</Subtitle>\r\n      <StyledReactLink\r\n        to={`/calendar/${setCurrentYear()}/${setCurrentMonth()}`}\r\n      >\r\n        Continue\r\n      </StyledReactLink>\r\n      <HorizontalFlex>\r\n        <SocialLinks href=\"https://www.linkedin.com/in/jkominovic/\">\r\n          <i className=\"fab fa-linkedin\"></i>\r\n        </SocialLinks>\r\n        <SocialLinks href=\"https://github.com/JulianKominovic\">\r\n          <i className=\"fab fa-github\"></i>\r\n        </SocialLinks>\r\n      </HorizontalFlex>\r\n      <Subtitle>Julian Ezequiel Kominovic</Subtitle>\r\n    </LandingBody>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst generateCustomPosition = () => {\r\n  const MAX = 100;\r\n  const MIN = -50;\r\n  let res = parseInt(Math.random() * (MAX - MIN) + MIN);\r\n  return res;\r\n};\r\n\r\nconst Container = styled.div`\r\n  background-image: linear-gradient(0deg, #8551ff, #3000a1);\r\n  color: #fff;\r\n  text-shadow: 0 0 10px #000;\r\n  height: 100vh;\r\n  text-align: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  position: relative;\r\n  z-index: 1;\r\n  font-family: \"Roboto\", sans-serif;\r\n`;\r\n\r\nconst ErrorText = styled.p`\r\n  font-size: clamp(10px, 20vw, 200px);\r\n  font-weight: 800;\r\n  margin-bottom: 0;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst SuggestionText = styled.p`\r\n  font-size: clamp(10px, 5vw, 200px);\r\n  font-weight: 400;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst PlanetsText = styled.p`\r\n  font-family: \"Planets\";\r\n  font-size: 400px;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  margin: 0;\r\n  color: #feffc3;\r\n  animation: animatedPlanets infinite 10s ease-in-out alternate-reverse;\r\n  z-index: 0;\r\n  @keyframes animatedPlanets {\r\n    0% {\r\n      top: ${(props) => props.initY} vh;\r\n      left: ${(props) => props.initX} vw;\r\n    }\r\n    100% {\r\n      top: ${(props) => props.endY}vh;\r\n      left: ${(props) => props.endX}vw;\r\n    }\r\n  }\r\n`;\r\nconst NotFound = () => {\r\n  return (\r\n    <Container>\r\n      <ErrorText>ERROR 404</ErrorText>\r\n      <SuggestionText>\r\n        Creo que te perdiste en un lugar desconocido\r\n      </SuggestionText>\r\n      <PlanetsText\r\n        initY={generateCustomPosition() - generateCustomPosition()}\r\n        initX={generateCustomPosition() - generateCustomPosition()}\r\n        endY={generateCustomPosition() - generateCustomPosition()}\r\n        endX={generateCustomPosition() - generateCustomPosition()}\r\n      >\r\n        _\r\n      </PlanetsText>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import styled from \"styled-components\";\r\nimport { CALENDAR_THEME, SELECT_YEAR_THEME } from \"../../themes\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animated } from \"react-spring\";\r\n\r\nconst CalendarContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  overflow: hidden;\r\n  background-color: ${(props) => {\r\n    if (props.month === 12) return \"#76FFFF\";\r\n    if (props.month >= 1 && props.month <= 3) {\r\n      return \"#76FFFF\";\r\n    }\r\n    if (props.month > 3 && props.month <= 6) {\r\n      return \"#FCD499\";\r\n    }\r\n    if (props.month > 6 && props.month <= 9) {\r\n      return \"#DAF1FF\";\r\n    }\r\n    if (props.month > 9 && props.month <= 11) {\r\n      return \"#BAE0F2\";\r\n    }\r\n  }};\r\n  color: ${CALENDAR_THEME.fc};\r\n`;\r\n\r\nconst CalendarHeader = styled(animated.div)`\r\n  height: 7vh;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 10vw;\r\n  padding-top: 3vh;\r\n`;\r\n\r\nconst YearLinkRouter = styled(Link)`\r\n  color: ${CALENDAR_THEME.fc};\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Year = styled.h1`\r\n  margin: 0;\r\n  cursor: pointer;\r\n  font-size: clamp(10px, 10vw, 50px);\r\n\r\n  &:hover,\r\n  :active,\r\n  :focus,\r\n  :checked {\r\n    background-color: transparent;\r\n  }\r\n`;\r\n\r\nconst Month = styled.h2`\r\n  margin: 0;\r\n  height: 100%;\r\n  font-weight: 400;\r\n  line-height: 0.9em;\r\n`;\r\nconst NavMenu = styled(Link)`\r\n  height: 100%;\r\n  font-size: clamp(10px, 10vw, 50px);\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${CALENDAR_THEME.fc};\r\n`;\r\n\r\nconst CalendarGrid = styled(animated.div)`\r\n  height: 70vh;\r\n\r\n  /* margin-top: 4vh; */\r\n  display: grid;\r\n\r\n  position: relative;\r\n  z-index: 0;\r\n\r\n  grid-template-columns: repeat(7, 1fr);\r\n  grid-template-rows: 0.4fr repeat(6, 1fr);\r\n\r\n  place-items: center;\r\n  text-align: center;\r\n\r\n  font-size: clamp(10px, 4vw, 50px);\r\n  font-weight: 600;\r\n\r\n  margin: 8vh 2vh 2vh 2vh;\r\n`;\r\n\r\nconst CurrentDate = styled(animated.div)``;\r\n\r\nconst DaysOfWeekNames = styled(Link)`\r\n  color: #000;\r\n`;\r\n\r\nconst ValidDays = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${CALENDAR_THEME.fc};\r\n`;\r\n\r\nconst OffsetDays = styled(Link)`\r\n  color: #4e4e4e29;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst CurrentDay = styled(Link)`\r\n  color: #fff;\r\n  text-decoration: none;\r\n`;\r\n\r\n//YEAR SELECTION SECTION\r\nconst YearSelector = styled(animated.div)`\r\n  position: absolute;\r\n\r\n  top: 0;\r\n\r\n  z-index: 99;\r\n  height: 88vh;\r\n  width: 100vw;\r\n  background-color: ${SELECT_YEAR_THEME.bg};\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: start;\r\n\r\n  padding-top: 6vh;\r\n  padding-bottom: 6vh;\r\n\r\n  align-items: center;\r\n`;\r\n\r\nconst YearSelectorBackButton = styled(Link)`\r\n  position: fixed;\r\n  bottom: 6vh;\r\n  color: ${SELECT_YEAR_THEME.bgHover};\r\n  left: 50%;\r\n  transform: translate(-50%);\r\n  font-size: clamp(10px, 12vw, 100px);\r\n  text-decoration: none;\r\n  background-color: ${SELECT_YEAR_THEME.fc};\r\n  padding: 1vh 10vw;\r\n  text-align: center;\r\n  font-weight: 600;\r\n  border-radius: 1.6em;\r\n`;\r\n\r\nconst YearSliderSelector = styled(animated.div)`\r\n  overflow-y: scroll;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n\r\n  margin-bottom: 6vh;\r\n  height: 38%;\r\n  width: 90vw;\r\n\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst YearSelectorButton = styled(animated.button)`\r\n  color: ${SELECT_YEAR_THEME.fc};\r\n  background-color: transparent;\r\n  border: none;\r\n  padding: 2vh 0;\r\n  font-size: clamp(10px, 8vw, 60px);\r\n  font-weight: 600;\r\n  border-radius: 1.6em;\r\n  width: 100%;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: ${SELECT_YEAR_THEME.bgHover};\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst MonthSelectorButton = styled(animated.button)`\r\n  color: ${SELECT_YEAR_THEME.fc};\r\n  background-color: transparent;\r\n  border: none;\r\n  border-radius: 1.6em;\r\n  padding: 2vh 0;\r\n  font-size: clamp(10px, 5vw, 60px);\r\n  font-weight: 400;\r\n  width: 100%;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: ${SELECT_YEAR_THEME.bgHover};\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport {\r\n  CalendarContainer,\r\n  CalendarHeader,\r\n  YearLinkRouter,\r\n  Year,\r\n  Month,\r\n  NavMenu,\r\n  CalendarGrid,\r\n  CurrentDate,\r\n  DaysOfWeekNames,\r\n  ValidDays,\r\n  OffsetDays,\r\n  CurrentDay,\r\n  YearSelector,\r\n  YearSelectorBackButton,\r\n  YearSliderSelector,\r\n  YearSelectorButton,\r\n  MonthSelectorButton,\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport * as Component from \"../components/calendar/CalendarComps\";\r\nimport { getDaysOfMonth, getCurrentDate } from \"../services/dateFunctions\";\r\nimport moment from \"moment\";\r\nimport { USER_LANGUAGE } from \"../services/dateFunctions\";\r\n\r\nconst buildYearsClickables = (handleYearChange) => {\r\n  const elements = [];\r\n  for (let i = 2023; i > 2017; i--) {\r\n    elements.push(\r\n      <Component.YearSelectorButton\r\n        name={i}\r\n        key={i}\r\n        onClick={(e) => {\r\n          handleYearChange(parseInt(e.target.name));\r\n        }}\r\n      >\r\n        {i}\r\n      </Component.YearSelectorButton>\r\n    );\r\n  }\r\n\r\n  return elements.map((e) => e);\r\n};\r\n\r\nconst buildMonthsClickables = (handleMonthChange) => {\r\n  const elements = [];\r\n  for (let i = 0; i < 12; i++) {\r\n    const month = moment().locale(USER_LANGUAGE).month(i).format(\"MMMM\");\r\n    const finalMonth = month.charAt(0).toUpperCase() + month.slice(1);\r\n    elements.push(\r\n      <Component.MonthSelectorButton\r\n        name={i + 1}\r\n        key={i + 1}\r\n        onClick={(e) => {\r\n          return handleMonthChange(parseInt(e.target.name));\r\n        }}\r\n      >\r\n        {finalMonth}\r\n      </Component.MonthSelectorButton>\r\n    );\r\n  }\r\n  return elements.map((e) => e);\r\n};\r\n\r\nconst buildCalendar = (year, month) => {\r\n  const daysOfMonths = getDaysOfMonth(year, month);\r\n\r\n  let numberOfMatches = 0;\r\n\r\n  //ACTUAL DATE\r\n  let actualDateArray = getCurrentDate().split(\",\");\r\n  let currentDay = actualDateArray[1];\r\n  let currentMonth = actualDateArray[2];\r\n  let currentYear = actualDateArray[3];\r\n\r\n  //Dynamic component\r\n  let FinalComponent = styled(Link);\r\n\r\n  return daysOfMonths.map((item, index) => {\r\n    item = item.charAt(0).toUpperCase() + item.slice(1);\r\n    if (item === \"1\") numberOfMatches++;\r\n    if (numberOfMatches === 1) {\r\n      // color = \"#000\";\r\n      FinalComponent = Component.ValidDays;\r\n      if (\r\n        month === currentMonth &&\r\n        year === currentYear &&\r\n        currentDay === item\r\n      ) {\r\n        FinalComponent = Component.CurrentDay;\r\n      }\r\n    }\r\n    if (numberOfMatches > 1 || numberOfMatches === 0)\r\n      FinalComponent = Component.OffsetDays;\r\n    if (index < 7) FinalComponent = Component.DaysOfWeekNames;\r\n\r\n    return (\r\n      <FinalComponent to={`/addTask/${year}/${month}/${item}`} key={index}>\r\n        {item}\r\n      </FinalComponent>\r\n    );\r\n  });\r\n};\r\n\r\nexport { buildCalendar, buildMonthsClickables, buildYearsClickables };\r\n","import { animated } from \"react-spring\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AnimationsContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  overflow: hidden;\r\n\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nconst TopElementAnimated = styled(animated.img)`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  position: absolute;\r\n  z-index: 0;\r\n  top: -50vh;\r\n  right: -50vw;\r\n`;\r\n\r\nconst BottomImageElement = styled(animated.img)`\r\n  height: 40vh;\r\n  width: 100vw;\r\n  position: absolute;\r\n  z-index: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst AuthorCredits = styled.a`\r\n  width: 100vw;\r\n\r\n  position: absolute;\r\n  z-index: 0;\r\n  left: 0;\r\n  bottom: 1vh;\r\n  font-size: clamp(10px, 2vw, 20px);\r\n  text-decoration: none;\r\n  color: black;\r\n  text-align: center;\r\n  font-weight: 800;\r\n  background-color: rgba(255, 255, 255, 0.609);\r\n`;\r\n\r\nexport {\r\n  TopElementAnimated,\r\n  AnimationsContainer,\r\n  BottomImageElement,\r\n  AuthorCredits,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/orangeSummer.4e2c68dd.svg\";","export default __webpack_public_path__ + \"static/media/snowflake.b7030bf0.svg\";","export default __webpack_public_path__ + \"static/media/snowy-mountains.e31164fc.jpg\";","export default __webpack_public_path__ + \"static/media/beach.261a5704.svg\";","export default __webpack_public_path__ + \"static/media/springBackground.18a3ff52.svg\";","export default __webpack_public_path__ + \"static/media/autumnBackground.77ca1cd9.svg\";","import React, { useState } from \"react\";\r\nimport { useSwipeable } from \"react-swipeable\"; //https://www.npmjs.com/package/react-swipeable\r\nimport { config, useSpring, useTransition } from \"react-spring\";\r\nimport { useParams } from \"react-router-dom\";\r\n//OWN COMPONENTS\r\nimport * as Component from \"../components/calendar/CalendarComps\";\r\n\r\n//BUILDING FUNCTIONS\r\nimport { buildCalendar } from \"../utils/calendarBuilders\";\r\n\r\n//DATE FUNCTIONS\r\nimport {\r\n  getMonth,\r\n  calculatePreviousMonth,\r\n  calculateNextMonth,\r\n} from \"../services/dateFunctions\";\r\nimport {\r\n  TopElementAnimated,\r\n  AnimationsContainer,\r\n  BottomImageElement,\r\n  AuthorCredits,\r\n} from \"../components/calendar/DecorationComps\";\r\nimport summerSvgUrl from \"../svgs/orangeSummer.svg\";\r\nimport snowflakeUrl from \"../svgs/snowflake.svg\";\r\nimport winterBottom from \"../svgs/snowy-mountains.jpg\";\r\nimport summerBottom from \"../svgs/beach.svg\";\r\nimport springBottom from \"../svgs/springBackground.svg\";\r\nimport autumnBottom from \"../svgs/autumnBackground.svg\";\r\n\r\n//------------------------------------------------------\r\nconst Calendar = () => {\r\n  const urlParams = useParams();\r\n\r\n  const [recalculatingMonths, setRecalculatingMonths] = useState(true);\r\n  const [month, setMonth] = useState(urlParams.month);\r\n  const [year, setYear] = useState(urlParams.year);\r\n\r\n  //EVENT HANDLERS\r\n\r\n  const mobileHandlers = useSwipeable({\r\n    onSwipedRight: () => {\r\n      setRecalculatingMonths((prev) => !prev);\r\n      const calculatePrevMonth = calculatePreviousMonth(month, year);\r\n      setMonth(parseInt(calculatePrevMonth[0]));\r\n      setYear(parseInt(calculatePrevMonth[1]));\r\n      setRecalculatingMonths((prev) => !prev);\r\n    },\r\n    onSwipedLeft: () => {\r\n      setRecalculatingMonths((prev) => !prev);\r\n      const calculateNextMonths = calculateNextMonth(month, year);\r\n\r\n      setMonth(parseInt(calculateNextMonths[0]));\r\n      setYear(parseInt(calculateNextMonths[1]));\r\n      setRecalculatingMonths((prev) => !prev);\r\n    },\r\n  });\r\n\r\n  const calendarAnimation = useSpring({\r\n    from: { transform: \"translateX(-100vw )\" },\r\n    to: { transform: \"translateX(0)\" },\r\n\r\n    config: config.gentle,\r\n  });\r\n\r\n  const topBarCalendarAnimation = useSpring({\r\n    from: { transform: \"translateY(-80vh )\" },\r\n    to: {\r\n      transform: \"translateY(0)\",\r\n    },\r\n\r\n    config: config.gentle,\r\n  });\r\n\r\n  const swipeTransition = useTransition(recalculatingMonths, {\r\n    from: {\r\n      opacity: 0,\r\n    },\r\n    enter: {\r\n      opacity: 1,\r\n\r\n      delay: 200,\r\n    },\r\n    leave: {\r\n      opacity: 0,\r\n    },\r\n  });\r\n\r\n  const buildDecoration = () => {\r\n    if (month === 12)\r\n      return (\r\n        <AnimationsContainer>\r\n          <TopElementAnimated src={summerSvgUrl} />\r\n          <BottomImageElement src={summerBottom}></BottomImageElement>\r\n          <AuthorCredits\r\n            href=\"https://www.vecteezy.com/free-vector/nature\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Nature Vectors by Vecteezy\r\n          </AuthorCredits>\r\n        </AnimationsContainer>\r\n      );\r\n    if (month >= 1 && month <= 3) {\r\n      return (\r\n        <AnimationsContainer>\r\n          <TopElementAnimated src={summerSvgUrl} />\r\n          <BottomImageElement src={summerBottom}></BottomImageElement>\r\n          <AuthorCredits\r\n            href=\"https://www.vecteezy.com/free-vector/nature\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Nature Vectors by Vecteezy\r\n          </AuthorCredits>\r\n        </AnimationsContainer>\r\n      );\r\n    }\r\n    if (month > 3 && month <= 6) {\r\n      return (\r\n        <AnimationsContainer>\r\n          <TopElementAnimated src={summerSvgUrl} />\r\n          <BottomImageElement src={autumnBottom}></BottomImageElement>\r\n          <AuthorCredits\r\n            href=\"https://www.vecteezy.com/free-vector/nature\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Nature Vectors by Vecteezy\r\n          </AuthorCredits>\r\n        </AnimationsContainer>\r\n      );\r\n    }\r\n    if (month > 6 && month <= 9) {\r\n      return (\r\n        <AnimationsContainer>\r\n          <TopElementAnimated src={snowflakeUrl} />\r\n          <BottomImageElement src={winterBottom}></BottomImageElement>\r\n        </AnimationsContainer>\r\n      );\r\n    }\r\n\r\n    if (month > 9 && month <= 11) {\r\n      return (\r\n        <AnimationsContainer>\r\n          <TopElementAnimated src={summerSvgUrl} />\r\n          <BottomImageElement src={springBottom}></BottomImageElement>\r\n          <AuthorCredits\r\n            href=\"https://www.vecteezy.com/free-vector/spring\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Spring Vectors by Vecteezy\r\n          </AuthorCredits>\r\n        </AnimationsContainer>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Component.CalendarContainer month={month}>\r\n      {buildDecoration()}\r\n      <Component.CalendarHeader style={topBarCalendarAnimation}>\r\n        <Component.CurrentDate>\r\n          <Component.YearLinkRouter to=\"/selectyear\">\r\n            <Component.Year style={calendarAnimation}>\r\n              {year} <i className=\"fas fa-caret-down\"></i>\r\n            </Component.Year>\r\n          </Component.YearLinkRouter>\r\n          <Component.Month>{getMonth(month)}</Component.Month>\r\n        </Component.CurrentDate>\r\n        <Component.NavMenu to=\"/addtask\">\r\n          <i className=\"fas fa-ellipsis-v\"></i>\r\n        </Component.NavMenu>\r\n      </Component.CalendarHeader>\r\n      {swipeTransition((styles, item) => {\r\n        return (\r\n          item && (\r\n            <Component.CalendarGrid {...mobileHandlers} style={styles}>\r\n              {buildCalendar(year, month)}\r\n            </Component.CalendarGrid>\r\n          )\r\n        );\r\n      })}\r\n    </Component.CalendarContainer>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React, { useState } from \"react\";\r\nimport { Prompt } from \"react-router-dom\";\r\n\r\nimport {\r\n  buildMonthsClickables,\r\n  buildYearsClickables,\r\n} from \"../../utils/calendarBuilders\";\r\nimport { setCurrentMonth, setCurrentYear } from \"../../utils/calendarFunctions\";\r\nimport { YearSliderSelector, YearSelectorBackButton } from \"./CalendarComps\";\r\n\r\nconst YearSelector = () => {\r\n  const [year, setYear] = useState(setCurrentYear());\r\n  const [month, setMonth] = useState(setCurrentMonth());\r\n\r\n  const intersectYearClicked = (yearReceptor) => {\r\n    setYear(yearReceptor);\r\n  };\r\n\r\n  const intersectMonthClicked = (yearReceptor) => {\r\n    setMonth(yearReceptor);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <YearSliderSelector>\r\n        {buildYearsClickables(intersectYearClicked)}\r\n      </YearSliderSelector>\r\n      <YearSliderSelector>\r\n        {buildMonthsClickables(intersectMonthClicked)}\r\n      </YearSliderSelector>\r\n\r\n      <YearSelectorBackButton\r\n        to={`calendar/${year}/${month}`} /*onClick={handleYearClick} */\r\n      >\r\n        Aplicar\r\n      </YearSelectorBackButton>\r\n      <Prompt\r\n        message={(location, action) => {\r\n          if (action === \"POP\") alert(\"NO GUARDASTE LOS CAMBIOS\");\r\n        }}\r\n      ></Prompt>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default YearSelector;\r\n","import React from \"react\";\r\n\r\nimport * as Component from \"../components/calendar/CalendarComps\";\r\nimport YearSelector from \"../components/calendar/YearSelector\";\r\n\r\nconst SelectYear = (props) => {\r\n  return (\r\n    <Component.YearSelector>\r\n      <YearSelector />\r\n    </Component.YearSelector>\r\n  );\r\n};\r\n\r\nexport default SelectYear;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { EDIT_TASK_THEME } from \"../../themes\";\r\n\r\nconst AddTaskbarBody = styled.div`\r\n  background-color: #40e0d0;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst NavBarTask = styled.div`\r\n  padding: 2vh 8vw;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 4vh;\r\n  width: 82vw;\r\n`;\r\n\r\nconst BackButton = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${EDIT_TASK_THEME.fc};\r\n  font-size: clamp(10px, 12vw, 100px);\r\n`;\r\nconst GeneralSection = styled.div`\r\n  text-align: right;\r\n`;\r\n\r\nconst Year = styled.h1`\r\n  margin: 0;\r\n  color: ${EDIT_TASK_THEME.fc};\r\n`;\r\n\r\nconst MonthAndDay = styled.h2`\r\n  margin: 0;\r\n  color: ${EDIT_TASK_THEME.fc};\r\n  font-weight: 300;\r\n  line-height: 0.8em;\r\n`;\r\n\r\nconst TaskBar = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 2vh 4vw;\r\n\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst TextIndicatesLists = styled.h3`\r\n  margin: 0;\r\n  color: ${EDIT_TASK_THEME.fc};\r\n  font-weight: 600;\r\n  margin-bottom: 2vh;\r\n  margin-right: 2vw;\r\n`;\r\n\r\nconst EmptyTask = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  border-radius: 1.6em;\r\n  padding: 2vh 4vw;\r\n  width: 82vw;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst EmptyTaskTitle = styled.h4`\r\n  margin: 0;\r\n  color: rgba(0, 0, 0, 0.3);\r\n  font-weight: 700;\r\n`;\r\n\r\nconst TaskButton = styled(Link)`\r\n  text-decoration: none;\r\n  color: rgba(0, 0, 0, 0.3);\r\n  font-size: clamp(10px, 6vw, 100px);\r\n  margin-left: 6vw;\r\n`;\r\n\r\nconst Task = styled.div`\r\n  background-color: ${(props) => props.backgroundColor || \" #fef\"};\r\n  border-radius: 1.6em;\r\n  padding: 2vh 4vw;\r\n  width: 82vw;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 2vh;\r\n`;\r\n\r\nconst TaskTitle = styled.h4`\r\n  margin: 0;\r\n  color: rgba(0, 0, 0, 1);\r\n  font-weight: 700;\r\n`;\r\n\r\nconst TaskHour = styled.h4`\r\n  margin: 0;\r\n  color: rgba(0, 0, 0, 0.5);\r\n  font-weight: 700;\r\n\r\n  &:after {\r\n    content: \" hs.\";\r\n  }\r\n`;\r\n\r\nexport {\r\n  AddTaskbarBody,\r\n  NavBarTask,\r\n  BackButton,\r\n  GeneralSection,\r\n  Year,\r\n  MonthAndDay,\r\n  TaskBar,\r\n  TextIndicatesLists,\r\n  EmptyTask,\r\n  EmptyTaskTitle,\r\n  TaskButton,\r\n  Task,\r\n  TaskTitle,\r\n  TaskHour,\r\n};\r\n","const localStorage = window.localStorage;\r\n\r\n//LOCALSTORAGE KEY IS THE CONCATENATION OF YEAR MONTH AND DAY BUT PARSED\r\n//THE PRIMARY KEY Of TASKS OBJECTS ARE THEIR TITLE\r\n\r\n//if the task is already in data base returns -1\r\nconst addTaskToDatabase = (object, year, month, day) => {\r\n  const id = parseInt(\"\" + year + month + day);\r\n  const arrayOfObjects = [];\r\n\r\n  if (typeof localStorage.getItem(id) === typeof \"\") {\r\n    const destructurizeStorage = JSON.parse(localStorage.getItem(id));\r\n    let isItemDuplicated = false;\r\n    destructurizeStorage.forEach((item) => {\r\n      if (item.title === object.title) {\r\n        isItemDuplicated = true;\r\n      }\r\n    });\r\n    if (isItemDuplicated === true) return -1;\r\n\r\n    destructurizeStorage.map((item) => arrayOfObjects.push(item));\r\n    arrayOfObjects.push(object);\r\n    localStorage.setItem(id, JSON.stringify(arrayOfObjects));\r\n  } else {\r\n    arrayOfObjects.push(object);\r\n    localStorage.setItem(id, JSON.stringify(arrayOfObjects));\r\n  }\r\n};\r\n\r\nconst removeTaskToDatabase = (year, month, day, keyTaskTitle) => {\r\n  const id = parseInt(\"\" + year + month + day);\r\n\r\n  const arrayOfObjects = [];\r\n\r\n  if (typeof localStorage.getItem(id) === typeof \"\") {\r\n    const destructurizeStorage = JSON.parse(localStorage.getItem(id));\r\n    destructurizeStorage.map((item) => arrayOfObjects.push(item));\r\n    const filteredArray = arrayOfObjects.filter(\r\n      (item) => item.title !== keyTaskTitle\r\n    );\r\n\r\n    localStorage.setItem(id, JSON.stringify(filteredArray));\r\n  }\r\n};\r\n\r\nconst requestTasks = (year, month, day) => {\r\n  const id = parseInt(\"\" + year + month + day);\r\n\r\n  return JSON.parse(localStorage.getItem(id));\r\n};\r\n\r\nconst replaceTask = (year, month, day, keyTaskTitle, newTaskData) => {\r\n  const id = parseInt(\"\" + year + month + day);\r\n\r\n  const localStorageData = JSON.parse(localStorage.getItem(id));\r\n  const filteredArray = localStorageData.filter(\r\n    (item) => item.title !== keyTaskTitle\r\n  );\r\n  filteredArray.push(newTaskData);\r\n  localStorage.setItem(id, JSON.stringify(filteredArray));\r\n};\r\n\r\nconst test = () => {\r\n  // for (let i = 0; i < 10; i++) {\r\n  //   localStorage.setItem(\r\n  //     1,\r\n  //     JSON.stringify([\r\n  //       { name: i, url: \"fenf\" },\r\n  //       { name: i * 2, url: \"ffecccccccc\" },\r\n  //     ])\r\n  //   );\r\n  // }\r\n};\r\n\r\nconst toggleNotificationFromTask = (year, month, day, keyTaskTitle) => {\r\n  const id = parseInt(\"\" + year + month + day);\r\n  const localStorageData = JSON.parse(localStorage.getItem(id));\r\n  const finalArray = localStorageData.map((item) => {\r\n    const localItem = item;\r\n    if (localItem.title === keyTaskTitle)\r\n      localItem.notification = !localItem.notification;\r\n    return localItem;\r\n  });\r\n  localStorage.setItem(id, JSON.stringify(finalArray));\r\n};\r\n\r\nconst clearLocalStorage = () => {\r\n  localStorage.clear();\r\n};\r\n\r\nexport {\r\n  clearLocalStorage,\r\n  test,\r\n  addTaskToDatabase,\r\n  removeTaskToDatabase,\r\n  requestTasks,\r\n  replaceTask,\r\n  toggleNotificationFromTask,\r\n};\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  AddTaskbarBody,\r\n  NavBarTask,\r\n  BackButton,\r\n  GeneralSection,\r\n  Year,\r\n  MonthAndDay,\r\n  TaskBar,\r\n  TextIndicatesLists,\r\n  EmptyTask,\r\n  EmptyTaskTitle,\r\n  TaskButton,\r\n  Task,\r\n  TaskTitle,\r\n} from \"../components/addtask/AddTaskComps\";\r\nimport { getMonth, getDayOfTheWeek } from \"../services/dateFunctions\";\r\nimport {\r\n  removeTaskToDatabase,\r\n  requestTasks,\r\n  toggleNotificationFromTask,\r\n} from \"../services/localStorageManagment\";\r\n\r\nconst AddTaskBar = (props) => {\r\n  const params = useParams();\r\n  const day = parseInt(params.day);\r\n  const month = parseInt(params.month);\r\n  const year = parseInt(params.year);\r\n\r\n  const buildTasks = () => {\r\n    const taskRequest = requestTasks(year, month, day);\r\n\r\n    return taskRequest.map((item) => {\r\n      return (\r\n        <Task key={item.title} backgroundColor={item.color}>\r\n          <TaskTitle>{item.title}</TaskTitle>\r\n\r\n          <GeneralSection>\r\n            <TaskButton\r\n              to={`/addtask/${year}/${month}/${day}`}\r\n              onClick={() => {\r\n                toggleNotificationFromTask(year, month, day, item.title);\r\n              }}\r\n            >\r\n              {item.notification ? (\r\n                <i className=\"fas fa-bell-slash\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-bell\"></i>\r\n              )}\r\n            </TaskButton>\r\n            <TaskButton\r\n              to={{\r\n                pathname: `/edittask/${year}/${month}/${day}`,\r\n                aboutProps: item,\r\n              }}\r\n            >\r\n              <i className=\"fas fa-edit\"></i>\r\n            </TaskButton>\r\n            <TaskButton\r\n              to={`/addtask/${year}/${month}/${day}`}\r\n              onClick={(e) =>\r\n                removeTaskToDatabase(year, month, day, item.title)\r\n              }\r\n            >\r\n              <i className=\"fas fa-trash\"></i>\r\n            </TaskButton>\r\n          </GeneralSection>\r\n        </Task>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AddTaskbarBody>\r\n      <NavBarTask>\r\n        <BackButton to={`/calendar/${year}/${month}`}>\r\n          <i className=\"fas fa-arrow-circle-left\"></i>\r\n        </BackButton>\r\n        <GeneralSection>\r\n          <Year>{year}</Year>\r\n          <MonthAndDay>\r\n            {getDayOfTheWeek(year, month, day)} {day}, {getMonth(month)}\r\n          </MonthAndDay>\r\n        </GeneralSection>\r\n      </NavBarTask>\r\n      <TaskBar>\r\n        <TextIndicatesLists>Lista de tareas</TextIndicatesLists>\r\n        {requestTasks(year, month, day) !== null ? buildTasks() : null}\r\n\r\n        <EmptyTask>\r\n          <EmptyTaskTitle>Nueva tarea</EmptyTaskTitle>\r\n          <TaskButton to={`/edittask/${year}/${month}/${day}`}>\r\n            <i className=\"fas fa-plus\"></i>\r\n          </TaskButton>\r\n        </EmptyTask>\r\n      </TaskBar>\r\n    </AddTaskbarBody>\r\n  );\r\n};\r\n\r\nexport default AddTaskBar;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { EDIT_TASK_THEME } from \"../../themes\";\r\n\r\nconst TaskEditContainer = styled.div`\r\n  padding: 1vh 4vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-color: ${(props) => props.backgroundColor || EDIT_TASK_THEME.bg};\r\n  height: 100vh;\r\n  gap: 1.6vh;\r\n`;\r\n\r\nconst InputTitle = styled.input`\r\n  background-color: transparent;\r\n  border: none;\r\n  border-bottom: 2px solid rgba(255, 255, 255, 0.198);\r\n  box-shadow: 0 2px 0px rgba(0, 0, 0, 0.25);\r\n  padding: 1vh 0;\r\n  text-align: center;\r\n  color: ${EDIT_TASK_THEME.fc};\r\n\r\n  width: 70%;\r\n\r\n  font-size: clamp(10px, 6vw, 100px);\r\n\r\n  &::placeholder {\r\n    color: ${EDIT_TASK_THEME.placeHolderColor};\r\n  }\r\n  &:active,\r\n  :focus,\r\n  :hover {\r\n    outline: none;\r\n    &::placeholder {\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InputDesc = styled.input`\r\n  background-color: ${EDIT_TASK_THEME.cardBackgroundColor};\r\n\r\n  border: none;\r\n  border-radius: 1.6em;\r\n  box-shadow: 0 0px 6px rgba(0, 0, 0, 0.25);\r\n  padding: 1vh 4vw;\r\n  text-align: left;\r\n  color: ${EDIT_TASK_THEME.fc};\r\n  height: 40vh;\r\n  width: 60%;\r\n\r\n  font-weight: 400;\r\n  font-size: clamp(10px, 4vw, 100px);\r\n  &::placeholder {\r\n    color: ${EDIT_TASK_THEME.placeHolderColor};\r\n  }\r\n  &:active,\r\n  :focus,\r\n  :hover {\r\n    outline: none;\r\n    &::placeholder {\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InputTime = styled.input`\r\n  background-color: ${EDIT_TASK_THEME.cardBackgroundColor};\r\n\r\n  border: none;\r\n  border-radius: 1.6em;\r\n  box-shadow: 0 0px 4px rgba(0, 0, 0, 0.25);\r\n  padding: 1vh 4vw;\r\n  margin-right: 3vw;\r\n  text-align: left;\r\n  color: ${EDIT_TASK_THEME.fc};\r\n\r\n  font-weight: 400;\r\n\r\n  &::placeholder {\r\n    color: ${EDIT_TASK_THEME.placeHolderColor};\r\n  }\r\n  &:active,\r\n  :focus,\r\n  :hover {\r\n    outline: none;\r\n    &::placeholder {\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InputNotification = styled.button`\r\n  background-color: ${EDIT_TASK_THEME.cardBackgroundColor};\r\n  border: none;\r\n  border-radius: 1.6em;\r\n  box-shadow: 0 0px 4px rgba(0, 0, 0, 0.25);\r\n  padding: 1vh;\r\n  width: 10vw;\r\n\r\n  &:active,\r\n  :focus,\r\n  :hover {\r\n    outline: none;\r\n    &::placeholder {\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InputColor = styled.input`\r\n  background-color: ${EDIT_TASK_THEME.cardBackgroundColor};\r\n  border: none;\r\n  border-radius: 1.6em;\r\n  box-shadow: 0 0px 4px rgba(0, 0, 0, 0.25);\r\n  border: 1px solid rgba(0, 0, 0, 0.25);\r\n  padding: 1vh;\r\n  width: 10vw;\r\n  outline: none;\r\n\r\n  &:active,\r\n  :focus,\r\n  :hover {\r\n    outline: none;\r\n    &::placeholder {\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\n  color: ${EDIT_TASK_THEME.fc};\r\n  margin-right: 4vw;\r\n  text-shadow: 0 0 4px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst SubmitButton = styled(Link)`\r\n  background-color: ${EDIT_TASK_THEME.fc};\r\n  color: ${EDIT_TASK_THEME.bg};\r\n\r\n  text-align: center;\r\n  border-radius: 1.6em;\r\n  box-shadow: 0 0px 4px rgba(0, 0, 0, 0.25);\r\n  padding: 2vh 16vw;\r\n  text-decoration: none;\r\n\r\n  &:active,\r\n  :focus,\r\n  :hover {\r\n    outline: none;\r\n    &::placeholder {\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  TaskEditContainer,\r\n  InputTitle,\r\n  InputDesc,\r\n  InputTime,\r\n  InputNotification,\r\n  InputLabel,\r\n  InputColor,\r\n  SubmitButton,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  addTaskToDatabase,\r\n  replaceTask,\r\n} from \"../services/localStorageManagment\";\r\n\r\nimport {\r\n  NavBarTask,\r\n  BackButton,\r\n  GeneralSection,\r\n  Year,\r\n  MonthAndDay,\r\n} from \"../components/addtask/AddTaskComps\";\r\nimport {\r\n  TaskEditContainer,\r\n  InputTitle,\r\n  InputDesc,\r\n  InputTime,\r\n  InputNotification,\r\n  InputColor,\r\n  InputLabel,\r\n  SubmitButton,\r\n} from \"../components/edittask/EditTaskComps\";\r\nimport { getDayOfTheWeek, getMonth } from \"../services/dateFunctions\";\r\n\r\nconst EditTask = (props) => {\r\n  const { title, desc, time, color, notification } =\r\n    props.location.aboutProps !== undefined\r\n      ? props.location.aboutProps\r\n      : {\r\n          title: \"\",\r\n          desc: \"\",\r\n          time: \"\",\r\n          color: \"\",\r\n          notification: null,\r\n        };\r\n\r\n  const params = useParams();\r\n  const year = parseInt(params.year);\r\n  const month = parseInt(params.month);\r\n  const day = parseInt(params.day);\r\n\r\n  const [bgColor, setBgColor] = useState(color || \"\");\r\n\r\n  const [taskConfig, setTaskConfig] = useState({\r\n    title: title,\r\n    desc: desc,\r\n    time: time,\r\n    color: color || \"#ffffff\",\r\n    notification: notification !== null ? notification : false,\r\n  });\r\n\r\n  const handleTitleChange = (e) => {\r\n    setTaskConfig((prevElements) => ({\r\n      ...prevElements,\r\n      title: e.target.value,\r\n    }));\r\n  };\r\n  const handleDescChange = (e) => {\r\n    setTaskConfig((prevElements) => ({\r\n      ...prevElements,\r\n      desc: e.target.value,\r\n    }));\r\n  };\r\n  const handleTimeChange = (e) => {\r\n    setTaskConfig((prevElements) => ({\r\n      ...prevElements,\r\n      time: e.target.value,\r\n    }));\r\n  };\r\n  const handleColorChange = (e) => {\r\n    setTaskConfig((prevElements) => ({\r\n      ...prevElements,\r\n      color: e.target.value,\r\n    }));\r\n\r\n    setBgColor(e.target.value);\r\n  };\r\n  const handleNotificationChange = (e) => {\r\n    setTaskConfig((prevElements) => ({\r\n      ...prevElements,\r\n      notification: !prevElements.notification,\r\n    }));\r\n  };\r\n\r\n  const updateTask = () => {\r\n    props.location.aboutProps === undefined\r\n      ? addTaskToDatabase(taskConfig, year, month, day)\r\n      : replaceTask(year, month, day, title, taskConfig);\r\n  };\r\n\r\n  return (\r\n    <TaskEditContainer backgroundColor={bgColor}>\r\n      <NavBarTask>\r\n        <BackButton to={`/addtask/${year}/${month}/${day}`}>\r\n          <i className=\"fas fa-arrow-circle-left\"></i>\r\n        </BackButton>\r\n        <GeneralSection>\r\n          <Year>{year}</Year>\r\n          <MonthAndDay>\r\n            {getDayOfTheWeek(year, month, day)} {day}, {getMonth(month)}\r\n          </MonthAndDay>\r\n        </GeneralSection>\r\n      </NavBarTask>\r\n\r\n      <InputTitle\r\n        type=\"text\"\r\n        name=\"title\"\r\n        id=\"title\"\r\n        placeholder=\"Titulo...\"\r\n        value={taskConfig.title}\r\n        onChange={(e) => handleTitleChange(e)}\r\n      />\r\n\r\n      <InputDesc\r\n        type=\"text\"\r\n        name=\"desc\"\r\n        id=\"desc\"\r\n        placeholder=\"Descripcion\"\r\n        onChange={(e) => handleDescChange(e)}\r\n        value={taskConfig.desc}\r\n      />\r\n      <GeneralSection>\r\n        <InputTime\r\n          type=\"time\"\r\n          name=\"time\"\r\n          id=\"time\"\r\n          onChange={(e) => handleTimeChange(e)}\r\n          value={taskConfig.time}\r\n        />\r\n        <InputNotification\r\n          type=\"button\"\r\n          onClick={(e) => handleNotificationChange(e)}\r\n        >\r\n          {taskConfig.notification === true ? (\r\n            <i className=\"fas fa-bell-slash\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-bell\"></i>\r\n          )}\r\n        </InputNotification>\r\n      </GeneralSection>\r\n\r\n      <GeneralSection>\r\n        <InputLabel htmlFor=\"color\">Elegi un color</InputLabel>\r\n        <InputColor\r\n          type=\"color\"\r\n          name=\"color\"\r\n          id=\"color\"\r\n          onChange={(e) => handleColorChange(e)}\r\n          value={taskConfig.color}\r\n        />\r\n      </GeneralSection>\r\n      <InputLabel type=\"submit\" value=\"Guardar\" onClick={updateTask} />\r\n      <SubmitButton\r\n        to={`/addtask/${year}/${month}/${day}`}\r\n        onClick={updateTask}\r\n      >\r\n        Guardar\r\n      </SubmitButton>\r\n    </TaskEditContainer>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","//PAGES\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Landing from \"./pages/Landing\";\nimport NotFound from \"./pages/NotFound\";\nimport Calendar from \"./pages/Calendar\";\nimport SelectYear from \"./pages/SelectYear\";\nimport AddTaskBar from \"./pages/AddTaskBar\";\nimport EditTask from \"./pages/EditTask\";\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker\n    .register(\"./sw.js\")\n    .then(function () {\n      console.log(\"Service Worker Registered\");\n    })\n    .catch((e) => console.log(\"error creating service worker\", e));\n}\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Landing}></Route>\n        <Route exact path=\"/calendar/:year/:month\" component={Calendar}></Route>\n        <Route exact path=\"/selectyear\" component={SelectYear}></Route>\n        <Route\n          exact\n          path=\"/addtask/:year/:month/:day\"\n          component={AddTaskBar}\n        ></Route>\n        <Route\n          exact\n          path=\"/edittask/:year/:month/:day\"\n          component={EditTask}\n        ></Route>\n        <Route component={NotFound}></Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}